// Signature format: 4.0
package androidx.paging {

  public final class AsyncPagingDataDiffer<T> {
    ctor public AsyncPagingDataDiffer(androidx.recyclerview.widget.DiffUtil.ItemCallback<T> diffCallback, androidx.recyclerview.widget.ListUpdateCallback updateCallback, optional kotlin.coroutines.CoroutineContext mainDispatcher, optional kotlin.coroutines.CoroutineContext workerDispatcher);
    ctor public AsyncPagingDataDiffer(androidx.recyclerview.widget.DiffUtil.ItemCallback<T> diffCallback, androidx.recyclerview.widget.ListUpdateCallback updateCallback, optional kotlin.coroutines.CoroutineContext mainDispatcher);
    ctor public AsyncPagingDataDiffer(androidx.recyclerview.widget.DiffUtil.ItemCallback<T> diffCallback, androidx.recyclerview.widget.ListUpdateCallback updateCallback);
    ctor @Deprecated public AsyncPagingDataDiffer(androidx.recyclerview.widget.DiffUtil.ItemCallback<T> diffCallback, androidx.recyclerview.widget.ListUpdateCallback updateCallback, optional kotlinx.coroutines.CoroutineDispatcher mainDispatcher);
    ctor @Deprecated public AsyncPagingDataDiffer(androidx.recyclerview.widget.DiffUtil.ItemCallback<T> diffCallback, androidx.recyclerview.widget.ListUpdateCallback updateCallback, optional kotlinx.coroutines.CoroutineDispatcher mainDispatcher, optional kotlinx.coroutines.CoroutineDispatcher workerDispatcher);
    method public void addLoadStateListener(kotlin.jvm.functions.Function1<? super androidx.paging.CombinedLoadStates,kotlin.Unit> listener);
    method public void addOnPagesUpdatedListener(kotlin.jvm.functions.Function0<kotlin.Unit> listener);
    method public T? getItem(@IntRange(from=0L) int index);
    method public int getItemCount();
    method public kotlinx.coroutines.flow.Flow<androidx.paging.CombinedLoadStates> getLoadStateFlow();
    method public kotlinx.coroutines.flow.Flow<kotlin.Unit> getOnPagesUpdatedFlow();
    method public T? peek(@IntRange(from=0L) int index);
    method public void refresh();
    method public void removeLoadStateListener(kotlin.jvm.functions.Function1<? super androidx.paging.CombinedLoadStates,kotlin.Unit> listener);
    method public void removeOnPagesUpdatedListener(kotlin.jvm.functions.Function0<kotlin.Unit> listener);
    method public void retry();
    method public androidx.paging.ItemSnapshotList<T> snapshot();
    method public suspend Object? submitData(androidx.paging.PagingData<T> pagingData, kotlin.coroutines.Continuation<? super kotlin.Unit>);
    property public final int itemCount;
    property public final kotlinx.coroutines.flow.Flow<androidx.paging.CombinedLoadStates> loadStateFlow;
    property public final kotlinx.coroutines.flow.Flow<kotlin.Unit> onPagesUpdatedFlow;
  }

  public final class NullPaddedListDiffHelperKt {
  }

}

package androidx.recyclerview.widget {

  public class BatchingListUpdateCallback implements androidx.recyclerview.widget.ListUpdateCallback {
    ctor public BatchingListUpdateCallback(androidx.recyclerview.widget.ListUpdateCallback);
    method public void dispatchLastEvent();
    method public void onChanged(int, int, Object!);
    method public void onInserted(int, int);
    method public void onMoved(int, int);
    method public void onRemoved(int, int);
  }

  public class DiffUtil {
    method public static androidx.recyclerview.widget.DiffUtil.DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil.Callback);
    method public static androidx.recyclerview.widget.DiffUtil.DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil.Callback, boolean);
  }

  public abstract static class DiffUtil.Callback {
    ctor public DiffUtil.Callback();
    method public abstract boolean areContentsTheSame(int, int);
    method public abstract boolean areItemsTheSame(int, int);
    method public Object? getChangePayload(int, int);
    method public abstract int getNewListSize();
    method public abstract int getOldListSize();
  }

  public static class DiffUtil.DiffResult {
    method public int convertNewPositionToOld(@IntRange(from=0) int);
    method public int convertOldPositionToNew(@IntRange(from=0) int);
    method public void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback);
    field public static final int NO_POSITION = -1; // 0xffffffff
  }

  public abstract static class DiffUtil.ItemCallback<T> {
    ctor public DiffUtil.ItemCallback();
    method public abstract boolean areContentsTheSame(T, T);
    method public abstract boolean areItemsTheSame(T, T);
    method public Object? getChangePayload(T, T);
  }

  public interface ListUpdateCallback {
    method public void onChanged(int, int, Object?);
    method public void onInserted(int, int);
    method public void onMoved(int, int);
    method public void onRemoved(int, int);
  }

  public class RecyclerView {
    ctor public RecyclerView();
    field public static final int NO_POSITION = -1; // 0xffffffff
  }

}

