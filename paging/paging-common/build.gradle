/*
 * Copyright (C) 2017 The Android Open Source Project
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import androidx.build.LibraryGroups
import androidx.build.Publish
import org.jetbrains.kotlin.gradle.tasks.KotlinCompileCommon

plugins {
    id("AndroidXPlugin")
    id("org.jetbrains.kotlin.multiplatform")
}

kotlin {
    ios()
    js(IR) {
        nodejs()
        binaries.executable()
    }
    jvm()

    sourceSets {
        commonMain {
            dependencies {
                api(libs.kotlinStdlibCommon)
                api(libs.kotlinCoroutinesCore)
                implementation("co.touchlab:stately-concurrency:1.2.0")
                implementation("co.touchlab:stately-iso-collections:1.2.0")
            }
        }
        nonJsMain {
            dependsOn(commonMain)
        }
        iosMain {
            dependsOn(nonJsMain)
        }
        jvmMain {
            dependsOn(nonJsMain)
        }
        jvmTest {
            dependencies {
                implementation(libs.junit)
                implementation(project(":internal-testutils-ktx"))
                implementation(project(":internal-testutils-paging"))
                implementation(libs.kotlinTest)
                implementation(libs.truth)
            }
        }
    }
}

androidx {
    name = "Android Paging-Common"
    publish = Publish.SNAPSHOT_AND_RELEASE
    mavenGroup = LibraryGroups.PAGING
    inceptionYear = "2017"
    description = "Android Paging-Common"
    // TODO Ideally we'd set this to false, but doing so also enforces strict API mode in test modules.
    legacyDisableKotlinStrictApiMode = true
    publishPlatforms = ["jvm", "js"]
}

// Allow usage of Kotlin's @OptIn.
tasks.withType(KotlinCompileCommon).configureEach {
    kotlinOptions {
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }
}
